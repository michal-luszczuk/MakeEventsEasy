apply plugin: 'maven-publish'

def isReleaseBuild() {
    return VERSION_NAME.contains("SNAPSHOT") == false
}

afterEvaluate {

    if (project.getPlugins().hasPlugin('com.android.application') ||
            project.getPlugins().hasPlugin('com.android.library')) {

        task dokkaJar(type: Jar) {
            group = JavaBasePlugin.DOCUMENTATION_GROUP
            description = "Assembles Kotlin docs with Dokka"
            archiveClassifier.set("javadoc")
            from(dokka)
        }

        task androidSourcesJar(type: Jar) {
            archiveClassifier.set('sources')
            from android.sourceSets.main.java.srcDirs
        }
    } else {
        task sourcesJar(type: Jar, dependsOn: classes) {
            archiveClassifier.set('sources')
            from sourceSets.main.allSource
        }

        task javadocJar(type: Jar, dependsOn: javadoc) {
            archiveClassifier.set('javadoc')
            from javadoc.destinationDir
        }
    }

    publishing {
        publications {
            release(MavenPublication) {
                from components.release

                groupId = GROUP
                artifactId = POM_ARTIFACT_ID
                version = VERSION_NAME

                pom {
                    name = POM_NAME
                    packaging = POM_PACKAGING
                    description = POM_DESCRIPTION
                    url = POM_URL

                    scm {
                        url = POM_SCM_URL
                        connection = POM_SCM_CONNECTION
                        developerConnection = POM_SCM_DEV_CONNECTION
                    }

                    licenses {
                        license {
                            name = POM_LICENCE_NAME
                            url = POM_LICENCE_URL
                            distribution = POM_LICENCE_DIST
                        }
                    }

                    developers {
                        developer {
                            id = POM_DEVELOPER_ID
                            name = POM_DEVELOPER_NAME
                        }
                    }

                    artifacts {
                        if (project.getPlugins().hasPlugin('com.android.application') ||
                                project.getPlugins().hasPlugin('com.android.library')) {
                            artifact androidSourcesJar
                            artifact dokkaJar
                        } else {
                            artifact sourcesJar
                            artifact javadocJar
                        }
                    }
                }
            }
        }

        repositories {
            maven {
                def releasesRepoUrl = "$buildDir/repos/releases"
                def snapshotsRepoUrl = "$buildDir/repos/snapshots"
                url = isReleaseBuild() ? releasesRepoUrl : snapshotsRepoUrl
            }
        }
    }
}